// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: messages.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string  `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title    string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author   string  `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Duration float32 `protobuf:"fixed32,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Subs     string  `protobuf:"bytes,5,opt,name=subs,proto3" json:"subs,omitempty"`
	IsTemp   bool    `protobuf:"varint,6,opt,name=is_temp,json=isTemp,proto3" json:"is_temp,omitempty"`
	IsIframe bool    `protobuf:"varint,7,opt,name=is_iframe,json=isIframe,proto3" json:"is_iframe,omitempty"`
}

func (x *VideoItem) Reset() {
	*x = VideoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoItem) ProtoMessage() {}

func (x *VideoItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoItem.ProtoReflect.Descriptor instead.
func (*VideoItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *VideoItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoItem) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *VideoItem) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoItem) GetSubs() string {
	if x != nil {
		return x.Subs
	}
	return ""
}

func (x *VideoItem) GetIsTemp() bool {
	if x != nil {
		return x.IsTemp
	}
	return false
}

func (x *VideoItem) GetIsIframe() bool {
	if x != nil {
		return x.IsIframe
	}
	return false
}

type VideoItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VideoItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VideoItemList) Reset() {
	*x = VideoItemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoItemList) ProtoMessage() {}

func (x *VideoItemList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoItemList.ProtoReflect.Descriptor instead.
func (*VideoItemList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *VideoItemList) GetItems() []*VideoItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type WebSocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//
	//	*WebSocketMessage_ConnectedEvent
	//	*WebSocketMessage_AddVideoEvent
	//	*WebSocketMessage_RemoveVideoEvent
	//	*WebSocketMessage_SkipVideoEvent
	//	*WebSocketMessage_PauseEvent
	//	*WebSocketMessage_PlayEvent
	//	*WebSocketMessage_GetTimeEvent
	//	*WebSocketMessage_SetTimeEvent
	//	*WebSocketMessage_SetRateEvent
	//	*WebSocketMessage_RewindEvent
	//	*WebSocketMessage_PlayItemEvent
	//	*WebSocketMessage_SetNextItemEvent
	//	*WebSocketMessage_UpdatePlaylistEvent
	//	*WebSocketMessage_TogglePlaylistLockEvent
	//	*WebSocketMessage_DumpEvent
	//	*WebSocketMessage_ClearPlaylistEvent
	MessageType isWebSocketMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *WebSocketMessage) Reset() {
	*x = WebSocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMessage) ProtoMessage() {}

func (x *WebSocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMessage.ProtoReflect.Descriptor instead.
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (m *WebSocketMessage) GetMessageType() isWebSocketMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *WebSocketMessage) GetConnectedEvent() *ConnectedEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_ConnectedEvent); ok {
		return x.ConnectedEvent
	}
	return nil
}

func (x *WebSocketMessage) GetAddVideoEvent() *AddVideoEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_AddVideoEvent); ok {
		return x.AddVideoEvent
	}
	return nil
}

func (x *WebSocketMessage) GetRemoveVideoEvent() *RemoveVideoEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_RemoveVideoEvent); ok {
		return x.RemoveVideoEvent
	}
	return nil
}

func (x *WebSocketMessage) GetSkipVideoEvent() *SkipVideoEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_SkipVideoEvent); ok {
		return x.SkipVideoEvent
	}
	return nil
}

func (x *WebSocketMessage) GetPauseEvent() *PauseEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_PauseEvent); ok {
		return x.PauseEvent
	}
	return nil
}

func (x *WebSocketMessage) GetPlayEvent() *PlayEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_PlayEvent); ok {
		return x.PlayEvent
	}
	return nil
}

func (x *WebSocketMessage) GetGetTimeEvent() *GetTimeEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_GetTimeEvent); ok {
		return x.GetTimeEvent
	}
	return nil
}

func (x *WebSocketMessage) GetSetTimeEvent() *SetTimeEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_SetTimeEvent); ok {
		return x.SetTimeEvent
	}
	return nil
}

func (x *WebSocketMessage) GetSetRateEvent() *SetRateEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_SetRateEvent); ok {
		return x.SetRateEvent
	}
	return nil
}

func (x *WebSocketMessage) GetRewindEvent() *RewindEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_RewindEvent); ok {
		return x.RewindEvent
	}
	return nil
}

func (x *WebSocketMessage) GetPlayItemEvent() *PlayItemEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_PlayItemEvent); ok {
		return x.PlayItemEvent
	}
	return nil
}

func (x *WebSocketMessage) GetSetNextItemEvent() *SetNextItemEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_SetNextItemEvent); ok {
		return x.SetNextItemEvent
	}
	return nil
}

func (x *WebSocketMessage) GetUpdatePlaylistEvent() *UpdatePlaylistEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_UpdatePlaylistEvent); ok {
		return x.UpdatePlaylistEvent
	}
	return nil
}

func (x *WebSocketMessage) GetTogglePlaylistLockEvent() *TogglePlaylistLockEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_TogglePlaylistLockEvent); ok {
		return x.TogglePlaylistLockEvent
	}
	return nil
}

func (x *WebSocketMessage) GetDumpEvent() *DumpEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_DumpEvent); ok {
		return x.DumpEvent
	}
	return nil
}

func (x *WebSocketMessage) GetClearPlaylistEvent() *ClearPlaylistEvent {
	if x, ok := x.GetMessageType().(*WebSocketMessage_ClearPlaylistEvent); ok {
		return x.ClearPlaylistEvent
	}
	return nil
}

type isWebSocketMessage_MessageType interface {
	isWebSocketMessage_MessageType()
}

type WebSocketMessage_ConnectedEvent struct {
	ConnectedEvent *ConnectedEvent `protobuf:"bytes,1,opt,name=connected_event,json=connectedEvent,proto3,oneof"`
}

type WebSocketMessage_AddVideoEvent struct {
	AddVideoEvent *AddVideoEvent `protobuf:"bytes,2,opt,name=add_video_event,json=addVideoEvent,proto3,oneof"`
}

type WebSocketMessage_RemoveVideoEvent struct {
	RemoveVideoEvent *RemoveVideoEvent `protobuf:"bytes,3,opt,name=remove_video_event,json=removeVideoEvent,proto3,oneof"`
}

type WebSocketMessage_SkipVideoEvent struct {
	SkipVideoEvent *SkipVideoEvent `protobuf:"bytes,4,opt,name=skip_video_event,json=skipVideoEvent,proto3,oneof"`
}

type WebSocketMessage_PauseEvent struct {
	PauseEvent *PauseEvent `protobuf:"bytes,5,opt,name=pause_event,json=pauseEvent,proto3,oneof"`
}

type WebSocketMessage_PlayEvent struct {
	PlayEvent *PlayEvent `protobuf:"bytes,6,opt,name=play_event,json=playEvent,proto3,oneof"`
}

type WebSocketMessage_GetTimeEvent struct {
	GetTimeEvent *GetTimeEvent `protobuf:"bytes,7,opt,name=get_time_event,json=getTimeEvent,proto3,oneof"`
}

type WebSocketMessage_SetTimeEvent struct {
	SetTimeEvent *SetTimeEvent `protobuf:"bytes,8,opt,name=set_time_event,json=setTimeEvent,proto3,oneof"`
}

type WebSocketMessage_SetRateEvent struct {
	SetRateEvent *SetRateEvent `protobuf:"bytes,9,opt,name=set_rate_event,json=setRateEvent,proto3,oneof"`
}

type WebSocketMessage_RewindEvent struct {
	RewindEvent *RewindEvent `protobuf:"bytes,10,opt,name=rewind_event,json=rewindEvent,proto3,oneof"`
}

type WebSocketMessage_PlayItemEvent struct {
	PlayItemEvent *PlayItemEvent `protobuf:"bytes,11,opt,name=play_item_event,json=playItemEvent,proto3,oneof"`
}

type WebSocketMessage_SetNextItemEvent struct {
	SetNextItemEvent *SetNextItemEvent `protobuf:"bytes,12,opt,name=set_next_item_event,json=setNextItemEvent,proto3,oneof"`
}

type WebSocketMessage_UpdatePlaylistEvent struct {
	UpdatePlaylistEvent *UpdatePlaylistEvent `protobuf:"bytes,13,opt,name=update_playlist_event,json=updatePlaylistEvent,proto3,oneof"`
}

type WebSocketMessage_TogglePlaylistLockEvent struct {
	TogglePlaylistLockEvent *TogglePlaylistLockEvent `protobuf:"bytes,14,opt,name=toggle_playlist_lock_event,json=togglePlaylistLockEvent,proto3,oneof"`
}

type WebSocketMessage_DumpEvent struct {
	DumpEvent *DumpEvent `protobuf:"bytes,15,opt,name=dump_event,json=dumpEvent,proto3,oneof"`
}

type WebSocketMessage_ClearPlaylistEvent struct {
	ClearPlaylistEvent *ClearPlaylistEvent `protobuf:"bytes,16,opt,name=clear_playlist_event,json=clearPlaylistEvent,proto3,oneof"`
}

func (*WebSocketMessage_ConnectedEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_AddVideoEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_RemoveVideoEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_SkipVideoEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_PauseEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_PlayEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_GetTimeEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_SetTimeEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_SetRateEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_RewindEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_PlayItemEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_SetNextItemEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_UpdatePlaylistEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_TogglePlaylistLockEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_DumpEvent) isWebSocketMessage_MessageType() {}

func (*WebSocketMessage_ClearPlaylistEvent) isWebSocketMessage_MessageType() {}

type ConnectedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList      []*VideoItem  `protobuf:"bytes,1,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
	ItemPos        int32         `protobuf:"varint,2,opt,name=item_pos,json=itemPos,proto3" json:"item_pos,omitempty"`
	IsPlaylistOpen bool          `protobuf:"varint,3,opt,name=is_playlist_open,json=isPlaylistOpen,proto3" json:"is_playlist_open,omitempty"`
	GetTime        *GetTimeEvent `protobuf:"bytes,4,opt,name=get_time,json=getTime,proto3" json:"get_time,omitempty"`
}

func (x *ConnectedEvent) Reset() {
	*x = ConnectedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedEvent) ProtoMessage() {}

func (x *ConnectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedEvent.ProtoReflect.Descriptor instead.
func (*ConnectedEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectedEvent) GetVideoList() []*VideoItem {
	if x != nil {
		return x.VideoList
	}
	return nil
}

func (x *ConnectedEvent) GetItemPos() int32 {
	if x != nil {
		return x.ItemPos
	}
	return 0
}

func (x *ConnectedEvent) GetIsPlaylistOpen() bool {
	if x != nil {
		return x.IsPlaylistOpen
	}
	return false
}

func (x *ConnectedEvent) GetGetTime() *GetTimeEvent {
	if x != nil {
		return x.GetTime
	}
	return nil
}

type AddVideoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item  *VideoItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	AtEnd bool       `protobuf:"varint,2,opt,name=at_end,json=atEnd,proto3" json:"at_end,omitempty"`
}

func (x *AddVideoEvent) Reset() {
	*x = AddVideoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVideoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoEvent) ProtoMessage() {}

func (x *AddVideoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoEvent.ProtoReflect.Descriptor instead.
func (*AddVideoEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *AddVideoEvent) GetItem() *VideoItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *AddVideoEvent) GetAtEnd() bool {
	if x != nil {
		return x.AtEnd
	}
	return false
}

type RemoveVideoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *RemoveVideoEvent) Reset() {
	*x = RemoveVideoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVideoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVideoEvent) ProtoMessage() {}

func (x *RemoveVideoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVideoEvent.ProtoReflect.Descriptor instead.
func (*RemoveVideoEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveVideoEvent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SkipVideoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SkipVideoEvent) Reset() {
	*x = SkipVideoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipVideoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipVideoEvent) ProtoMessage() {}

func (x *SkipVideoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipVideoEvent.ProtoReflect.Descriptor instead.
func (*SkipVideoEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *SkipVideoEvent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PauseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float32 `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PauseEvent) Reset() {
	*x = PauseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseEvent) ProtoMessage() {}

func (x *PauseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseEvent.ProtoReflect.Descriptor instead.
func (*PauseEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *PauseEvent) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ClearPlaylistEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearPlaylistEvent) Reset() {
	*x = ClearPlaylistEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearPlaylistEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearPlaylistEvent) ProtoMessage() {}

func (x *ClearPlaylistEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearPlaylistEvent.ProtoReflect.Descriptor instead.
func (*ClearPlaylistEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

type PlayEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float32 `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PlayEvent) Reset() {
	*x = PlayEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayEvent) ProtoMessage() {}

func (x *PlayEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayEvent.ProtoReflect.Descriptor instead.
func (*PlayEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *PlayEvent) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetTimeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   float32 `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`
	Paused bool    `protobuf:"varint,2,opt,name=paused,proto3" json:"paused,omitempty"`
	Rate   float32 `protobuf:"fixed32,3,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *GetTimeEvent) Reset() {
	*x = GetTimeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeEvent) ProtoMessage() {}

func (x *GetTimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeEvent.ProtoReflect.Descriptor instead.
func (*GetTimeEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *GetTimeEvent) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetTimeEvent) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *GetTimeEvent) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type SetTimeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float32 `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SetTimeEvent) Reset() {
	*x = SetTimeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTimeEvent) ProtoMessage() {}

func (x *SetTimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTimeEvent.ProtoReflect.Descriptor instead.
func (*SetTimeEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *SetTimeEvent) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type SetRateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate float32 `protobuf:"fixed32,1,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *SetRateEvent) Reset() {
	*x = SetRateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRateEvent) ProtoMessage() {}

func (x *SetRateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRateEvent.ProtoReflect.Descriptor instead.
func (*SetRateEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *SetRateEvent) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type RewindEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float32 `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RewindEvent) Reset() {
	*x = RewindEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewindEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewindEvent) ProtoMessage() {}

func (x *RewindEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewindEvent.ProtoReflect.Descriptor instead.
func (*RewindEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *RewindEvent) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type PlayItemEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *PlayItemEvent) Reset() {
	*x = PlayItemEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayItemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayItemEvent) ProtoMessage() {}

func (x *PlayItemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayItemEvent.ProtoReflect.Descriptor instead.
func (*PlayItemEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *PlayItemEvent) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type SetNextItemEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *SetNextItemEvent) Reset() {
	*x = SetNextItemEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNextItemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNextItemEvent) ProtoMessage() {}

func (x *SetNextItemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNextItemEvent.ProtoReflect.Descriptor instead.
func (*SetNextItemEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *SetNextItemEvent) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type UpdatePlaylistEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList *VideoItemList `protobuf:"bytes,1,opt,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
}

func (x *UpdatePlaylistEvent) Reset() {
	*x = UpdatePlaylistEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaylistEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistEvent) ProtoMessage() {}

func (x *UpdatePlaylistEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistEvent.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *UpdatePlaylistEvent) GetVideoList() *VideoItemList {
	if x != nil {
		return x.VideoList
	}
	return nil
}

type TogglePlaylistLockEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen bool `protobuf:"varint,1,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
}

func (x *TogglePlaylistLockEvent) Reset() {
	*x = TogglePlaylistLockEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TogglePlaylistLockEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TogglePlaylistLockEvent) ProtoMessage() {}

func (x *TogglePlaylistLockEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TogglePlaylistLockEvent.ProtoReflect.Descriptor instead.
func (*TogglePlaylistLockEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *TogglePlaylistLockEvent) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type DumpEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DumpEvent) Reset() {
	*x = DumpEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpEvent) ProtoMessage() {}

func (x *DumpEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpEvent.ProtoReflect.Descriptor instead.
func (*DumpEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *DumpEvent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb1, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75,
	0x62, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x75, 0x62, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x69, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe6, 0x07, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x41, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0e, 0x73, 0x6b, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x35, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a,
	0x0e, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x77,
	0x69, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x69,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x42, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x57, 0x0a, 0x1a, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x17, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x75,
	0x6d, 0x70, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x44, 0x75, 0x6d, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x64, 0x75,
	0x6d, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x14, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x74, 0x45, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x22, 0x0a, 0x0e, 0x53,
	0x6b, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x20, 0x0a, 0x0a, 0x50, 0x61, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61,
	0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x21, 0x0a, 0x0b, 0x52, 0x65, 0x77, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x24, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x44, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x32, 0x0a, 0x17, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x1f, 0x0a, 0x09, 0x44, 0x75, 0x6d, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_messages_proto_goTypes = []interface{}{
	(*VideoItem)(nil),               // 0: VideoItem
	(*VideoItemList)(nil),           // 1: VideoItemList
	(*WebSocketMessage)(nil),        // 2: WebSocketMessage
	(*ConnectedEvent)(nil),          // 3: ConnectedEvent
	(*AddVideoEvent)(nil),           // 4: AddVideoEvent
	(*RemoveVideoEvent)(nil),        // 5: RemoveVideoEvent
	(*SkipVideoEvent)(nil),          // 6: SkipVideoEvent
	(*PauseEvent)(nil),              // 7: PauseEvent
	(*ClearPlaylistEvent)(nil),      // 8: ClearPlaylistEvent
	(*PlayEvent)(nil),               // 9: PlayEvent
	(*GetTimeEvent)(nil),            // 10: GetTimeEvent
	(*SetTimeEvent)(nil),            // 11: SetTimeEvent
	(*SetRateEvent)(nil),            // 12: SetRateEvent
	(*RewindEvent)(nil),             // 13: RewindEvent
	(*PlayItemEvent)(nil),           // 14: PlayItemEvent
	(*SetNextItemEvent)(nil),        // 15: SetNextItemEvent
	(*UpdatePlaylistEvent)(nil),     // 16: UpdatePlaylistEvent
	(*TogglePlaylistLockEvent)(nil), // 17: TogglePlaylistLockEvent
	(*DumpEvent)(nil),               // 18: DumpEvent
}
var file_messages_proto_depIdxs = []int32{
	0,  // 0: VideoItemList.items:type_name -> VideoItem
	3,  // 1: WebSocketMessage.connected_event:type_name -> ConnectedEvent
	4,  // 2: WebSocketMessage.add_video_event:type_name -> AddVideoEvent
	5,  // 3: WebSocketMessage.remove_video_event:type_name -> RemoveVideoEvent
	6,  // 4: WebSocketMessage.skip_video_event:type_name -> SkipVideoEvent
	7,  // 5: WebSocketMessage.pause_event:type_name -> PauseEvent
	9,  // 6: WebSocketMessage.play_event:type_name -> PlayEvent
	10, // 7: WebSocketMessage.get_time_event:type_name -> GetTimeEvent
	11, // 8: WebSocketMessage.set_time_event:type_name -> SetTimeEvent
	12, // 9: WebSocketMessage.set_rate_event:type_name -> SetRateEvent
	13, // 10: WebSocketMessage.rewind_event:type_name -> RewindEvent
	14, // 11: WebSocketMessage.play_item_event:type_name -> PlayItemEvent
	15, // 12: WebSocketMessage.set_next_item_event:type_name -> SetNextItemEvent
	16, // 13: WebSocketMessage.update_playlist_event:type_name -> UpdatePlaylistEvent
	17, // 14: WebSocketMessage.toggle_playlist_lock_event:type_name -> TogglePlaylistLockEvent
	18, // 15: WebSocketMessage.dump_event:type_name -> DumpEvent
	8,  // 16: WebSocketMessage.clear_playlist_event:type_name -> ClearPlaylistEvent
	0,  // 17: ConnectedEvent.video_list:type_name -> VideoItem
	10, // 18: ConnectedEvent.get_time:type_name -> GetTimeEvent
	0,  // 19: AddVideoEvent.item:type_name -> VideoItem
	1,  // 20: UpdatePlaylistEvent.video_list:type_name -> VideoItemList
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoItemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVideoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVideoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipVideoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearPlaylistEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTimeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewindEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayItemEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNextItemEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaylistEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TogglePlaylistLockEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*WebSocketMessage_ConnectedEvent)(nil),
		(*WebSocketMessage_AddVideoEvent)(nil),
		(*WebSocketMessage_RemoveVideoEvent)(nil),
		(*WebSocketMessage_SkipVideoEvent)(nil),
		(*WebSocketMessage_PauseEvent)(nil),
		(*WebSocketMessage_PlayEvent)(nil),
		(*WebSocketMessage_GetTimeEvent)(nil),
		(*WebSocketMessage_SetTimeEvent)(nil),
		(*WebSocketMessage_SetRateEvent)(nil),
		(*WebSocketMessage_RewindEvent)(nil),
		(*WebSocketMessage_PlayItemEvent)(nil),
		(*WebSocketMessage_SetNextItemEvent)(nil),
		(*WebSocketMessage_UpdatePlaylistEvent)(nil),
		(*WebSocketMessage_TogglePlaylistLockEvent)(nil),
		(*WebSocketMessage_DumpEvent)(nil),
		(*WebSocketMessage_ClearPlaylistEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
