// This file is automatically generated by qtc from "report.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line report.qtpl:1
package templates

//line report.qtpl:1
import "strconv"

//line report.qtpl:2
import "time"

//line report.qtpl:3
import "meguca/lang"

//line report.qtpl:4
import "meguca/auth"

//line report.qtpl:5
import "meguca/common"

// Report submission form

//line report.qtpl:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line report.qtpl:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line report.qtpl:8
func StreamReportForm(qw422016 *qt422016.Writer, id uint64) {
	//line report.qtpl:9
	ln := lang.Get().UI

	//line report.qtpl:9
	qw422016.N().S(`<input type=text name=target value="`)
	//line report.qtpl:10
	qw422016.N().S(strconv.FormatUint(id, 10))
	//line report.qtpl:10
	qw422016.N().S(`" hidden><input type=text name=reason placeholder="`)
	//line report.qtpl:11
	qw422016.N().S(ln["reason"])
	//line report.qtpl:11
	qw422016.N().S(`" maxlength="`)
	//line report.qtpl:11
	qw422016.N().D(common.MaxLenReason)
	//line report.qtpl:11
	qw422016.N().S(`"><br><label><input type=checkbox name=illegal>`)
	//line report.qtpl:15
	qw422016.N().S(ln["illegal"])
	//line report.qtpl:15
	qw422016.N().S(`<br></label>`)
	//line report.qtpl:18
	streamcaptcha(qw422016, "all")
	//line report.qtpl:19
	streamsubmit(qw422016, true)
//line report.qtpl:20
}

//line report.qtpl:20
func WriteReportForm(qq422016 qtio422016.Writer, id uint64) {
	//line report.qtpl:20
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line report.qtpl:20
	StreamReportForm(qw422016, id)
	//line report.qtpl:20
	qt422016.ReleaseWriter(qw422016)
//line report.qtpl:20
}

//line report.qtpl:20
func ReportForm(id uint64) string {
	//line report.qtpl:20
	qb422016 := qt422016.AcquireByteBuffer()
	//line report.qtpl:20
	WriteReportForm(qb422016, id)
	//line report.qtpl:20
	qs422016 := string(qb422016.B)
	//line report.qtpl:20
	qt422016.ReleaseByteBuffer(qb422016)
	//line report.qtpl:20
	return qs422016
//line report.qtpl:20
}

// Render list of all reports on board

//line report.qtpl:23
func StreamReportList(qw422016 *qt422016.Writer, reports []auth.Report) {
	//line report.qtpl:24
	streamtableStyle(qw422016)
	//line report.qtpl:24
	qw422016.N().S(`<table>`)
	//line report.qtpl:26
	streamtableHeaders(qw422016, "id", "post", "reason", "time")
	//line report.qtpl:27
	for _, r := range reports {
		//line report.qtpl:27
		qw422016.N().S(`<tr><td>`)
		//line report.qtpl:29
		qw422016.N().S(strconv.FormatUint(r.ID, 10))
		//line report.qtpl:29
		qw422016.N().S(`</td><td>`)
		//line report.qtpl:30
		streamstaticPostLink(qw422016, r.Target)
		//line report.qtpl:30
		qw422016.N().S(`</td><td>`)
		//line report.qtpl:31
		qw422016.E().S(r.Reason)
		//line report.qtpl:31
		qw422016.N().S(`</td><td>`)
		//line report.qtpl:32
		qw422016.E().S(r.Created.Format(time.UnixDate))
		//line report.qtpl:32
		qw422016.N().S(`</td></tr>`)
		//line report.qtpl:34
	}
	//line report.qtpl:34
	qw422016.N().S(`</table>`)
//line report.qtpl:36
}

//line report.qtpl:36
func WriteReportList(qq422016 qtio422016.Writer, reports []auth.Report) {
	//line report.qtpl:36
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line report.qtpl:36
	StreamReportList(qw422016, reports)
	//line report.qtpl:36
	qt422016.ReleaseWriter(qw422016)
//line report.qtpl:36
}

//line report.qtpl:36
func ReportList(reports []auth.Report) string {
	//line report.qtpl:36
	qb422016 := qt422016.AcquireByteBuffer()
	//line report.qtpl:36
	WriteReportList(qb422016, reports)
	//line report.qtpl:36
	qs422016 := string(qb422016.B)
	//line report.qtpl:36
	qt422016.ReleaseByteBuffer(qb422016)
	//line report.qtpl:36
	return qs422016
//line report.qtpl:36
}
